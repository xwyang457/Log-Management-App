{"ast":null,"code":"var _jsxFileName = \"/Users/yangxiwei/Desktop/Learn_Log/src/Components/LogsForm/LogsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from \"../UI/Card/Card\";\nimport './LogsForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogsForm = () => {\n  _s();\n  /*\n  *   当表单项发生变化时，获取用户输入的内容\n  * */\n  // 创建三个变量，用来存储表单中的数据\n  // let inputDate = '';\n  // let inputDesc = '';\n  // let inputTime = 0;\n\n  const [inputDate, setInputDate] = useState('');\n  const [inputDesc, setInputDesc] = useState('');\n  const [inputTime, setInputTime] = useState('');\n\n  // 创建一个响应函数，监听日期的变化\n  const dateChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中保存了当前事件触发时的所有信息\n    // event.target 执行的是触发事件的对象（DOM对象）\n    //console.log(e.target.value);\n    setInputDate(e.target.value);\n  };\n\n  // 监听内容的变化\n  const descChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中保存了当前事件触发时的所有信息\n    // event.target 执行的是触发事件的对象（DOM对象）\n    //console.log(e.target.value);\n    setInputDesc(e.target.value);\n  };\n\n  //监听时长的变化\n  const timeChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中保存了当前事件触发时的所有信息\n    // event.target 执行的是触发事件的对象（DOM对象）\n    //console.log(e.target.value);\n    setInputTime(e.target.value);\n  };\n\n  // 当表单提交时，汇总表单中的数据\n  /*\n  *   在React中，通常表单不需要自行提交\n  *       而是要通过React提交\n  * */\n  const formSubmitHandler = e => {\n    // 取消表单的默认行为\n    e.preventDefault();\n    // 获取表单项中的数据日期、内容、时长\n    // 将数据拼装为一个对象\n    const newLog = {\n      date: new Date(inputDate),\n      desc: inputDesc,\n      time: +inputTime\n    };\n\n    // 清空表单项\n    setInputDate('');\n    setInputDesc('');\n    setInputTime('');\n    console.log(newLog);\n\n    /*\n    *   提交表单后如何清空表单中的旧数据\n    *       现在这种表单，在React我们称为非受控组件\n    *\n    *   我们可以将表单中的数据存储到state中，\n    *       然后将state设置为表单项value值，\n    *       这样当表单项发生变化，state会随之变化，\n    *       反之，state发生变化，表单项也会跟着改变，这种操作我们就称为双向绑定\n    *       这样一来，表单就成为了一个受控组件\n    *\n    *\n    *\n    * */\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"\\u65E5\\u671F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: dateChangeHandler,\n          value: inputDate,\n          id: \"date\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          children: \"\\u5185\\u5BB9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: descChangeHandler,\n          value: inputDesc,\n          id: \"desc\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"\\u65F6\\u957F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: timeChangeHandler,\n          value: inputTime,\n          id: \"time\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u6DFB\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(LogsForm, \"IdVTPRq7YYnPkny6ZzqHTTr8f2U=\");\n_c = LogsForm;\nexport default LogsForm;\nvar _c;\n$RefreshReg$(_c, \"LogsForm\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","LogsForm","_s","inputDate","setInputDate","inputDesc","setInputDesc","inputTime","setInputTime","dateChangeHandler","e","target","value","descChangeHandler","timeChangeHandler","formSubmitHandler","preventDefault","newLog","date","Date","desc","time","console","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","type","_c","$RefreshReg$"],"sources":["/Users/yangxiwei/Desktop/Learn_Log/src/Components/LogsForm/LogsForm.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Card from \"../UI/Card/Card\";\nimport './LogsForm.css';\n\nconst LogsForm = () => {\n\n    /*\n    *   当表单项发生变化时，获取用户输入的内容\n    * */\n    // 创建三个变量，用来存储表单中的数据\n    // let inputDate = '';\n    // let inputDesc = '';\n    // let inputTime = 0;\n\n    const [inputDate, setInputDate] = useState('');\n    const [inputDesc, setInputDesc] = useState('');\n    const [inputTime, setInputTime] = useState('');\n\n\n    // 创建一个响应函数，监听日期的变化\n    const dateChangeHandler = (e) => {\n        // 获取到当前触发事件的对象\n        // 事件对象中保存了当前事件触发时的所有信息\n        // event.target 执行的是触发事件的对象（DOM对象）\n        //console.log(e.target.value);\n        setInputDate(e.target.value);\n    };\n\n    // 监听内容的变化\n    const descChangeHandler = (e) => {\n        // 获取到当前触发事件的对象\n        // 事件对象中保存了当前事件触发时的所有信息\n        // event.target 执行的是触发事件的对象（DOM对象）\n        //console.log(e.target.value);\n        setInputDesc(e.target.value);\n    };\n\n    //监听时长的变化\n    const timeChangeHandler = (e) => {\n        // 获取到当前触发事件的对象\n        // 事件对象中保存了当前事件触发时的所有信息\n        // event.target 执行的是触发事件的对象（DOM对象）\n        //console.log(e.target.value);\n        setInputTime(e.target.value);\n    };\n\n    // 当表单提交时，汇总表单中的数据\n    /*\n    *   在React中，通常表单不需要自行提交\n    *       而是要通过React提交\n    * */\n    const formSubmitHandler = (e) => {\n        // 取消表单的默认行为\n        e.preventDefault();\n        // 获取表单项中的数据日期、内容、时长\n        // 将数据拼装为一个对象\n        const newLog = {\n            date: new Date(inputDate),\n            desc: inputDesc,\n            time: +inputTime\n        };\n\n        // 清空表单项\n        setInputDate('');\n        setInputDesc('');\n        setInputTime('');\n\n        console.log(newLog);\n\n        /*\n        *   提交表单后如何清空表单中的旧数据\n        *       现在这种表单，在React我们称为非受控组件\n        *\n        *   我们可以将表单中的数据存储到state中，\n        *       然后将state设置为表单项value值，\n        *       这样当表单项发生变化，state会随之变化，\n        *       反之，state发生变化，表单项也会跟着改变，这种操作我们就称为双向绑定\n        *       这样一来，表单就成为了一个受控组件\n        *\n        *\n        *\n        * */\n\n    };\n\n    return (\n        <Card className=\"logs-form\">\n            <form onSubmit={formSubmitHandler}>\n                <div className=\"form-item\">\n                    <label htmlFor=\"date\">日期</label>\n                    <input onChange={dateChangeHandler} value={inputDate} id=\"date\" type=\"date\"/>\n                </div>\n                <div className=\"form-item\">\n                    <label htmlFor=\"desc\">内容</label>\n                    <input onChange={descChangeHandler} value={inputDesc} id=\"desc\" type=\"text\"/>\n                </div>\n                <div className=\"form-item\">\n                    <label htmlFor=\"time\">时长</label>\n                    <input onChange={timeChangeHandler} value={inputTime} id=\"time\" type=\"number\"/>\n                </div>\n                <div className=\"form-btn\">\n                    <button>添加</button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default LogsForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}