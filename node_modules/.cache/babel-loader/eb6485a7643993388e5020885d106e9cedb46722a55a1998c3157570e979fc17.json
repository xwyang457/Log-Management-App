{"ast":null,"code":"var _jsxFileName = \"/Users/yangxiwei/Desktop/Learn_Log/src/App.js\",\n  _s = $RefreshSig$();\nimport Logs from \"./Components/Logs/Logs\";\nimport LogsForm from \"./Components/LogsForm/LogsForm\";\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // 数据\n  const [logsData, setLogsData] = useState([{\n    id: '001',\n    date: new Date(2021, 1, 20, 18, 30),\n    desc: '学习九阳神功',\n    time: 30\n  }, {\n    id: '002',\n    date: new Date(2022, 2, 10, 12, 30),\n    desc: '学习降龙十八掌',\n    time: 20\n  }, {\n    id: '003',\n    date: new Date(2022, 2, 11, 11, 30),\n    desc: '学习JavaScript',\n    time: 40\n  }, {\n    id: '004',\n    date: new Date(2022, 2, 15, 10, 30),\n    desc: '学习React',\n    time: 80\n  }]);\n\n  /*\n  *   下一步：\n  *     将LogsForm中的数据传递给App组件，然后App组件，将新的日志添加到数组中！\n  * */\n\n  // 定义一个函数\n  const saveLogHandler = newLog => {\n    // 向新的日志中添加id\n    newLog.id = Date.now() + '';\n\n    // console.log('App.js -->',newLog);\n\n    // 将新的数据添加到数组中\n    // logsData.push(newLog);\n    setLogsData([newLog, ...logsData]);\n  };\n\n  // 定义一个函数，从数据中删除一条日志\n  const delLogById = id => {\n    setLogsData(prevState => {\n      return prevState.filter(item => item.id !== id);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LogsForm, {\n      onSaveLog: saveLogHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Logs, {\n      logsData: logsData,\n      onDelLog: delLogById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n\n// 导出App\n_s(App, \"tTleMGJq/6vqgduz88bqI082WHE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Logs","LogsForm","useState","jsxDEV","_jsxDEV","App","_s","logsData","setLogsData","id","date","Date","desc","time","saveLogHandler","newLog","now","delLogById","prevState","filter","item","className","children","onSaveLog","fileName","_jsxFileName","lineNumber","columnNumber","onDelLog","_c","$RefreshReg$"],"sources":["/Users/yangxiwei/Desktop/Learn_Log/src/App.js"],"sourcesContent":["import Logs from \"./Components/Logs/Logs\";\nimport LogsForm from \"./Components/LogsForm/LogsForm\";\nimport './App.css';\nimport {useState} from \"react\";\n\nconst App = () => {\n\n    // 数据\n    const [logsData, setLogsData] = useState([\n        {\n            id: '001',\n            date: new Date(2021, 1, 20, 18, 30),\n            desc: '学习九阳神功',\n            time: 30\n        },\n        {\n            id: '002',\n            date: new Date(2022, 2, 10, 12, 30),\n            desc: '学习降龙十八掌',\n            time: 20\n        },\n        {\n            id: '003',\n            date: new Date(2022, 2, 11, 11, 30),\n            desc: '学习JavaScript',\n            time: 40\n        },\n        {\n            id: '004',\n            date: new Date(2022, 2, 15, 10, 30),\n            desc: '学习React',\n            time: 80\n        }\n    ]);\n\n    /*\n    *   下一步：\n    *     将LogsForm中的数据传递给App组件，然后App组件，将新的日志添加到数组中！\n    * */\n\n    // 定义一个函数\n    const saveLogHandler = (newLog) => {\n        // 向新的日志中添加id\n        newLog.id = Date.now() + '';\n\n        // console.log('App.js -->',newLog);\n\n        // 将新的数据添加到数组中\n        // logsData.push(newLog);\n        setLogsData([newLog, ...logsData]);\n\n    };\n    \n\n        // 定义一个函数，从数据中删除一条日志\n    const delLogById = (id) => {\n        setLogsData(prevState => {\n            return prevState.filter(item => item.id !== id);\n        });\n    };\n\n\n    return <div className=\"app\">\n        {/*引入LogsFrom*/}\n        <LogsForm onSaveLog={saveLogHandler}/>\n        <Logs logsData={logsData} onDelLog={delLogById}/>\n    </div>;\n};\n\n// 导出App\nexport default App;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CACrC;IACIO,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnCC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnCC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnCC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnCC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;;EAEF;AACJ;AACA;AACA;;EAEI;EACA,MAAMC,cAAc,GAAIC,MAAM,IAAK;IAC/B;IACAA,MAAM,CAACN,EAAE,GAAGE,IAAI,CAACK,GAAG,CAAC,CAAC,GAAG,EAAE;;IAE3B;;IAEA;IACA;IACAR,WAAW,CAAC,CAACO,MAAM,EAAE,GAAGR,QAAQ,CAAC,CAAC;EAEtC,CAAC;;EAGG;EACJ,MAAMU,UAAU,GAAIR,EAAE,IAAK;IACvBD,WAAW,CAACU,SAAS,IAAI;MACrB,OAAOA,SAAS,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAGD,oBAAOL,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAEvBlB,OAAA,CAACH,QAAQ;MAACsB,SAAS,EAAET;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtCvB,OAAA,CAACJ,IAAI;MAACO,QAAQ,EAAEA,QAAS;MAACqB,QAAQ,EAAEX;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AACV,CAAC;;AAED;AAAArB,EAAA,CAhEMD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiET,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}