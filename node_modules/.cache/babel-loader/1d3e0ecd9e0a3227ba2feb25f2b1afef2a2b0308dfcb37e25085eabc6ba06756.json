{"ast":null,"code":"var _jsxFileName = \"/Users/yangxiwei/Desktop/Learn_Log/src/Components/Logs/Logs.js\";\n/* 日志的容器 */\nimport LogItem from \"./LogItem/LogItem\";\nimport Card from \"../UI/Card/Card\";\nimport './Logs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = props => {\n  /*\n  *   logsDate 用来存储学习的日志，\n  *       这个数据除了当前组件Logs需要使用外，LogsForm也需要使用\n  *       当遇到一个数据需要被多个组件使用时，我们可以将数据放入到这些组件共同的祖先元素中\n  *       这样就可以使得多个组件都能方便的访问到这个数据\n  *\n  *   state的提升\n  *\n  * */\n  // 模拟一组从服务器中加载的数据\n\n  // 将数据放入JSX中\n  let logItemData = props.logsData.map((item, index) => /*#__PURE__*/_jsxDEV(LogItem, {\n    onDelLog: () => props.onDelLog(index),\n    date: item.date,\n    desc: item.desc,\n    time: item.time\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 59\n  }, this));\n  if (logItemData.length === 0) {\n    logItemData = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-logs\",\n      children: \"\\u6CA1\\u6709\\u627E\\u5230\\u65E5\\u5FD7\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs\",\n    children: logItemData\n    // logsData.map(item => <LogItem {...item}/> )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["LogItem","Card","jsxDEV","_jsxDEV","Logs","props","logItemData","logsData","map","item","index","onDelLog","date","desc","time","id","fileName","_jsxFileName","lineNumber","columnNumber","length","className","children","_c","$RefreshReg$"],"sources":["/Users/yangxiwei/Desktop/Learn_Log/src/Components/Logs/Logs.js"],"sourcesContent":["/* 日志的容器 */\nimport LogItem from \"./LogItem/LogItem\";\nimport Card from \"../UI/Card/Card\";\nimport './Logs.css';\n\nconst Logs = (props) => {\n\n    /*\n    *   logsDate 用来存储学习的日志，\n    *       这个数据除了当前组件Logs需要使用外，LogsForm也需要使用\n    *       当遇到一个数据需要被多个组件使用时，我们可以将数据放入到这些组件共同的祖先元素中\n    *       这样就可以使得多个组件都能方便的访问到这个数据\n    *\n    *   state的提升\n    *\n    * */\n    // 模拟一组从服务器中加载的数据\n\n\n    // 将数据放入JSX中\n    let logItemData = props.logsData.map((item, index) => <LogItem\n                                                                     onDelLog={()=>props.onDelLog(index)}\n                                                                     key={item.id}\n                                                                     date={item.date}\n                                                                     desc={item.desc}\n                                                                     time={item.time}/>);\n    if(logItemData.length === 0) {\n        logItemData = <p className=\"no-logs\">没有找到日志！</p>\n    }   \n    \n    \n    \n    return <Card className=\"logs\">\n        {\n            logItemData\n            // logsData.map(item => <LogItem {...item}/> )\n        }\n    </Card>\n};\n\nexport default Logs;"],"mappings":";AAAA;AACA,OAAOA,OAAO,MAAM,mBAAmB;AACvC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;;EAGA;EACA,IAAIC,WAAW,GAAGD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKP,OAAA,CAACH,OAAO;IACGW,QAAQ,EAAEA,CAAA,KAAIN,KAAK,CAACM,QAAQ,CAACD,KAAK,CAAE;IAEpCE,IAAI,EAAEH,IAAI,CAACG,IAAK;IAChBC,IAAI,EAAEJ,IAAI,CAACI,IAAK;IAChBC,IAAI,EAAEL,IAAI,CAACK;EAAK,GAHXL,IAAI,CAACM,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC,CAAC;EACpF,IAAGb,WAAW,CAACc,MAAM,KAAK,CAAC,EAAE;IACzBd,WAAW,gBAAGH,OAAA;MAAGkB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpD;EAIA,oBAAOhB,OAAA,CAACF,IAAI;IAACoB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAErBhB;IACA;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AACX,CAAC;AAACI,EAAA,GAjCInB,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}